//
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
//
// Use of this source code is subject to the terms of the Microsoft end-user
// license agreement (EULA) under which you licensed this SOFTWARE PRODUCT.
// If you did not accept the terms of the EULA, you are not authorized to use
// this source code. For a copy of the EULA, please see the LICENSE.RTF on your
// install media.
//

cpp_quote("//")
cpp_quote("// Copyright (c) Microsoft Corporation.  All rights reserved.")
cpp_quote("//")
cpp_quote("//")
cpp_quote("// Use of this source code is subject to the terms of the Microsoft end-user")
cpp_quote("// license agreement (EULA) under which you licensed this SOFTWARE PRODUCT.")
cpp_quote("// If you did not accept the terms of the EULA, you are not authorized to use")
cpp_quote("// this source code. For a copy of the EULA, please see the LICENSE.RTF on your")
cpp_quote("// install media.")
cpp_quote("//")

import "wtypes.idl";
import "objidl.idl";
import "unknwn.idl";

// ComCallData used with IContextCallback::ContextCallback

typedef struct tagComCallData {
        DWORD   dwDispid;
        DWORD   dwReserved;
        void    *pUserDefined;
} ComCallData;


// IContextCallback interface
[
    local,
    object,
    uuid(000001da-0000-0000-C000-000000000046),
    pointer_default(unique)
]

interface IContextCallback : IUnknown
{
    typedef [ref] HRESULT __stdcall (*PFNCONTEXTCALL)(ComCallData* pParam);

    HRESULT ContextCallback([in] PFNCONTEXTCALL pfnCallback,
                            [in] ComCallData *pParam,
                            [in] REFIID riid,
                            [in] int iMethod,
                            [in] IUnknown *pUnk);
}

